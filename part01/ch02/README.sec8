section08. TCP/IP 프로토콜
<IP>
TCP/IP프로토콜에서 전송을 담당. 신뢰성이 없고 비연결 지향적, 목적지까지 패킷을 전달하는데 최선을 다하지만, 결과는 보장못함(그래서 TCP가 필요함)

ip 데이터그램 그조
1. VER(버전)
- IPv4이면 4, IPv6이면 6.
2. HLEN(헤더길이)
- IP헤더(Ver~Options필드) 길이. Options유무에 따라 가변적임
- 헤더의 길이는 워드 단위로 표현(20byte/4=5)
3. Service Type/Differentiated Services(서비스 종류)
- 필드명칭이 Differentiated Services로 변경됨.
- 각 비트가 해당 패킷의 중요도와 우선순위 표시. 네트워크 혼잡시 라우터에 의해 버려질 패킷으로 결정
- TOS(Type of Service)로 우선권 설정가능
4. Total Lengeth(전체길이)
- 바이트 단위이며, 65535바이트까지 표현가능하지만, 물리적 NIC에 제한받음(일반적인 이더넷의 최대 데이터그램 크기가 1500바이트/최소가 46바이트)
- 물리매체에 따라 최대로 보낼수 있는 데이터그램 크기를 MTU(Maximum Tranfer Unit)라고 부르며, 각 매체의 MTU는 아래와 같음

* hyperchannel 65536
* 16Mbps token ring(IBM) 17914
* 4Mbps token ring(IBM) 4464
* ATM 9180
* FDDI 4352
* Ethernet 1500
* X.25 576

5. Identification(식별자)
- 유일한 식별자. IP패킷을 구분. 패킷이 단편화 되었을때의 어떤 원본 패킷의 일부였는지를 알리는 부분.
ex) 로컬 Ethernet네트워크에서 X.25로 나가는 경우, MTU에 따라 패킷을 자르게 되고, 잘려진 패킷이 동일함을 보장하기 위해 각 단편화된 패킷의 Identification에 동일한 값이 부여됨.

6. Flags(플래그) 3bit
- 왼쪽에서 1 비트: 사용안함
- 2번째 비트: 단편화 할수 없음을 의미. 라우터가 해당 패킷을 받으면 폐기한 뒤, ICMP패킷으로 오류 알림
- 3번째 비트: 패킷이 단편화 되어있으나, 끝이 아님(0인 경우 끝). 재조합시 참조

7. Fragmentation Offset(단편화 오프셋) 13bit
- 단편화 순서. 오프셋의 값은 (단편화 된 데이터의 시작부분>>3) 과 같음.
- 패킷을 합칠때 비교 기준으로 사용

8. Time to live(수명)
- 네트워크에서 영원히 떠돌아 다니지 않도록 하기 위함.

9. Protocol(프로토콜)
- IP패킷이 담는 데이터가 어떤 프로토콜인지 나타냄. 각 프로토콜의 고유 번호 설정됨.

10. Header checksum(헤더 체크섬)
- 패킷 헤더가 정상적인지 검사시 사용.
- CRC체크섬 확인 절차시 0이 아니면 패킷을 버림.

11. Source Ip Address, Destination IP Address
- 발신지 IP와 목적지 IP주소

<TCP>
IP는 네트워크 계층 프로토콜, TCP,UDP는 전송 계층 프로토콜. IP는 신뢰성이 없으므로(전달하기 노력하므로) TCP사용.
※네트워크 계층 패킷을 데이터그램, 전송계층 패킷을 세그먼트라고 부름.

(특징)
1. 연결 지향적 프로토콜
- 목적지, 발신지 호스트가 신뢰성을 위해 접속을 이룬 뒤에, 데이터 전송.

2. TCP가 전송하는 데이터는 스트림(순차적)
- TCP에 의해 패킷에 순서가 매겨지므로, 먼저 보냈지만 나중에 도착한 패킷도 데이터 추출시 순서에 맞게 재조립.

3. TCP는 흐룸제어 수행
- 네트웍 패킷이 빨라 수신지 호스트가 감당하기 힘들정도로 오면, 버퍼오버플로우 방지를 위해, Sliding Window 방식을 이용해 송/수신지가 버퍼의 크기를 가변적으로 조절하며 흐름 제어 수행.

4. TCP는 오류 제어를 수행
- 수신지에서 TCP체크섬을 통해 이상이 있다면, 패킷을 버린뒤 ACK메시지를 보내지 않고(그럼 송신지에서 다시 보냄), 이상이 없으면 ACK패킷을 보냄.

5. TCP는 프로세스간의 네트워크 자원에 대한 다중화 실현
- TCP는 포트번호로 프로세스에게 송수신 패킷을 구별해서 나눠줌

6. TCP는 전이중 서비스
- 양방향 송수신 가능

(TCP 세그먼트 구조)
1. Source Port Address( 발신지 포트 주소)
- 발신지 호스트의 포트 주소(0~65535)

2. Destination Port Address(목적지 포트 주소)
- 목적지 호스트의 포트 주소

3. Sequence Number(순서 번호)
- 크기가 커서 여러개의 세그먼트로 나누어야 하는 경우, 초기값은 랜덤이고 각 세그먼트는 데이터의 시작점 위치와 크기가 조합되서 나타남.
ex) 초기값은 1000, 1번재 세그먼트 크기 100, 2번째 세그먼트 크기 50이면 1번째 번호는 1000, 두번째는 1100, 세번째는 1150이 된다.

4. Acknowledgement number(확인 응답 번호)
- 데이터를 제대로 받았음을 알려주기 위한 번호.
- Sequence Number + Lengeth값을 더해서 보내주게 되며, 실제로 확인응답번호는 다음에 받을 Sequence Number값이 된다
- 확인 응답번호가 없으면, 발신지 호스트에서 다시 보내게 된다.

5. HLEN(헤더 길이)
- TCP헤더는 옵션 유무에 따라 20~60byte까지 가변적.
- 헤더의 길이는 워드 단위로 표현(20byte/4=5)

6. Reserved(예약)
- 향후 사용을 위해 예약

7. 제어 플래그(U, A, P, R, S, F)
흐름제어와 연결 설정 및 종료를 위해 사용되는 비트(1로 셋팅)

- U : URG : Urgent 항목의 포인터가 유효함
- A : ACK : 확인 응답 번호가 유효함
- P : PSH : 해당 세그먼트의 데이터는 애플리케이션에게 즉시 전달되어야 함
- R : RST : 연결을 재설정하거나 어효하지 않은 세그먼트에 대한 응답으로 사용됨
- S : SYN : 연결 설정 요구를 나타내며 반드시 승인되어져야 함
- F : FIN : 한쪽 끝에서 유발되는 연결의 종료와 일정 방향으로의 데이터 흐름의 끝을 나타냄

※ACK플래그가 설정된 TCP 세그먼트를 수신지가 받으면 확인응답세그먼트이므로, 확인응답번호필드값 확인
※FIN플래그가 설정되 TCP 세그먼트를 받으면 접속종료로이므로 접속종료

※패킷 데이터 크기가 0일수 있음. 오류제어를 위해 TCP헤더만 가지는 패킷이 많이 있음. 이 경우 수신지에서는 (순서번호+1)을 확인응답번호로 보내줌.

8. Window Size(윈도우 크기)
- 송수신지 버퍼(=Window)의 크기를 나타냄. 흐름 제어를 수행할때 참조.

9. Checksum(체크섬)
- TCP헤더와 데이터의 체크섬. 오류체크. 1비트라도 변경된 경우 0이 나오질 않음

10. Urgent Pointer(긴급 포인터)
- URG제어 비트가 설정된 긴급 상황에서 사용. 발신지 쪽에서 수신지로부터 응답이 잘못되거나, 이상 발견시 긴급 데이터를 실은 세그먼트를 수신지로 보냄.
- URG비트가 설정된 세그먼트에서 긴급 데이터를 추출하여 순서에 상관없이 애플리케이션에 가장 먼저 전달.

11. Options and Padding(옵션과 패딩)
- TCP는 40바이트까지 옵션을 가질수 있음(패딩을 붙여서라도 4바이트 정렬되어야 함)

12. Application DATA(애플리케이션 데이터)
- 데이터가 들어감.

