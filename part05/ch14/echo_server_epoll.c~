#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <string.h>
#include <sys/epoll.h>
#include <arpa/inet.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <fcntl.h>
#include <sys/ioctl.h>

#define SA struct sockaddr
#define EPOLL_SIZE 20

int main(int argc, char ** argv) {
        struct sockaddr_in addr, clientaddr;
        struct eph_comm * conn;
        int sfd;
        int cfd;
        int clilen;
        int flags = 1;
        int n, i;
        int readn;
        struct epoll_event * events;

        int fd;
        char buf_in[256];

        // 이벤트 풀을 생성시킨다
        events = (struct epoll_event *)malloc(sizeof(*events) * EPOLL_SIZE);

        if((efd = epoll_create(EPOLL_SIZE)) < 0) {
                perror("epoll_create error");
                return 1;
        }

        clilen = sizeof(clientaddr);
        sfd = socket(AF_INET, SOCK_STREAM, 0);

        if(sfd == -1) {
                perror("socket error");
                close(sfd);
                return 1;
        }

        addr.sin_family = AF_INET;
        addr.sin_port = htons(4445);
        addr.sin_addr.s_addr = htonl(INADDR_ANY);
        if(bind(sfd, (struct sockaddr *)&addr, sizeof(addr)) == -1) {
                
        }
}
